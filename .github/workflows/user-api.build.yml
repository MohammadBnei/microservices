name: User api build and test

on:
  push:
    branches:
      - master
    paths:
      - user-api/**
      - .github/workflows/user-api.build.yml
  pull_request:
    branches:
      - master
    paths:
      - user-api/**
      - .github/workflows/user-api.build.yml

jobs:
  # Label of the container job
  build-test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    continue-on-error: true
    strategy:
      matrix:
        version: [16, '17.9.1']

    services:
      # Label used to access the service container
      mariadb:
        # Docker Hub image
        image: bitnami/mariadb:10.9.3
        ports:
          - 3306:3306
        env:
          ALLOW_EMPTY_PASSWORD: yes
          MARIADB_DATABASE: user
          MARIADB_USER: nestjs
          MARIADB_PASSWORD: password
        options: >-
          --health-cmd="mysql --protocol=tcp -h mariadb -u root -e 'show databases;'"
          --health-interval=5s 
          --health-timeout=2s 
          --health-retries=5


    defaults:
      run:
        working-directory: user-api

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.13.4
          run_install: false
          
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: E2E Test
        run: pnpm test:e2e
        env:
          DATABASE_HOST: localhost
          DATABASE_PASSWORD: password
          DATABASE_USER: nestjs
          DATABASE_NAME: test

      - name: Build
        run: pnpm build
